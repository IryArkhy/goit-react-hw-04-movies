{"version":3,"sources":["Pages/MovieDetailsPage/MovieDetailsPage.module.css","components/Cast/Cast.module.css","components/App/App.module.css","Pages/HomePage/HomePage.module.css","components/Reviews/Reviews.module.css","Pages/MoviesPage/MoviesPage.module.css","components/Navigation/Navigation.module.css","components/SearchForm/SearchForm.module.css","routes.js","components/Navigation/Navigation.js","servises/movies-api.js","Pages/HomePage/HomePage.js","components/Cast/Cast.js","components/Reviews/Reviews.js","Pages/MovieDetailsPage/MovieDetailsPage.js","components/SearchForm/SearchForm.js","Pages/MoviesPage/MoviesPage.js","components/App/App.js","index.js"],"names":["module","exports","Navigation","className","styles","navigation","exact","to","routes","key","fetchMovies","keyWord","fetch","then","response","json","data","results","fetchTrendingMovies","fetchMovieDetails","id","res","fetchCredits","cast","fetchReviews","HomePage","state","movies","movieAPI","setState","catch","err","console","log","this","inTrend","inTrend_list","map","movie","original_title","Component","Cast","getCredits","movieApi","movieID","props","match","params","movieId","castList","person","cast_id","castList__item","profile_path","type","width","src","alt","castList__name","name","character","Reviews","reviews","reviewsList","review","author","content","length","MovieDetailsPage","fetchDetails","moveToPreviousPage","history","goBack","movieDetails","back_button","onClick","details_info","poster_path","details_info__wrapper","title","release_date","slice","vote_average","overview","genres","item","details_additional","details_additional__list","url","path","component","SearchForm","imageKeyWord","handleChange","e","target","value","handleSubmit","preventDefault","onSearch","searchForm","onSubmit","autoComplete","placeholder","onChange","MoviesPage","setSearchQuery","serchQuery","push","location","search","query","URLSearchParams","get","moviesAPI","prevProps","prevQuery","nextQuery","MoviesPage_list","App","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.af0241f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetails\":\"MovieDetailsPage_movieDetails__MyVJc\",\"back_button\":\"MovieDetailsPage_back_button__2C2NY\",\"details_info\":\"MovieDetailsPage_details_info__1kJVu\",\"details_info__wrapper\":\"MovieDetailsPage_details_info__wrapper__36K1z\",\"details_additional__list\":\"MovieDetailsPage_details_additional__list__38YTD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast\":\"Cast_cast__1Cuiw\",\"castList\":\"Cast_castList__1-rtt\",\"castList__item\":\"Cast_castList__item__HnU2Q\",\"castList__name\":\"Cast_castList__name__35AdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\",\"button\":\"App_button__13d5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inTrend\":\"HomePage_inTrend__1iq1t\",\"inTrend_list\":\"HomePage_inTrend_list__1-O2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"Reviews_reviews__1lheT\",\"reviewsList\":\"Reviews_reviewsList__2YrNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesPage\":\"MoviesPage_MoviesPage__16__H\",\"MoviesPage_list\":\"MoviesPage_MoviesPage_list__3V1nJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1VtLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__3tlus\"};","export default {\n  HOME_PAGE: '/',\n  MOVIES_PAGE: '/movies',\n  MOVIES_DETAILES_PAGE: '/movies/:movieId',\n  CAST: '/movies/:movieId/cast',\n  REVIEWS: '/movies/:movieId/reviews',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport styles from './Navigation.module.css';\n\nconst Navigation = () => {\n  return (\n    <ul className={styles.navigation}>\n      <li>\n        <NavLink exact to={routes.HOME_PAGE}>\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to={routes.MOVIES_PAGE}>Movies</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","const key = '11b4a623d9aafb08171a1bc5505fc6f9';\n\nconst fetchMovies = (keyWord = '') => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${keyWord}&page=1`,\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nconst fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${key} `,\n  )\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchMovieDetails = id => {\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}`).then(\n    res => res.json(),\n  );\n};\n\nconst fetchCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}`,\n  )\n    .then(res => res.json())\n    .then(data => {\n      return data.cast;\n    });\n};\n\nconst fetchReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}`,\n  )\n    .then(res => res.json())\n    .then(data => {\n      return data.results;\n    });\n};\n\nexport default {\n  fetchMovies,\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchCredits,\n  fetchReviews,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport movieAPI from '../../servises/movies-api';\nimport styles from './HomePage.module.css';\n\nclass HomePage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    movieAPI\n      .fetchTrendingMovies()\n      .then(movies => {\n        this.setState({\n          movies,\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <>\n        <h2 className={styles.inTrend}>Trending today</h2>\n        <ul className={styles.inTrend_list}>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`movies/${movie.id}`}>\n                <span>&#8680;</span>\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport movieApi from '../../servises/movies-api';\nimport styles from './Cast.module.css';\n\nclass Cast extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({ movieId: T.string.isRequired }),\n      path: T.string.isRequired,\n      url: T.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    cast: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const movieID = match.params.movieId;\n\n    this.getCredits(movieID);\n  }\n\n  getCredits = id => {\n    movieApi.fetchCredits(id).then(cast => {\n      this.setState({\n        cast,\n      });\n    });\n  };\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <section className={styles.cast}>\n        <h2>Cast</h2>\n        {cast && (\n          <ul className={styles.castList}>\n            {cast.map(person => (\n              <li key={person.cast_id} className={styles.castList__item}>\n                <object\n                  data={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\n                  type=\"image/png\"\n                  width=\"120\"\n                >\n                  <img\n                    src=\"https://cdn.pixabay.com/photo/2016/08/12/04/03/mask-1587566_1280.png\"\n                    alt=\"actor\"\n                    width=\"140\"\n                  />\n                </object>\n                <p className={styles.castList__name}>{person.name}</p>\n                <p>\n                  <span>Character:</span> {person.character}\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n    );\n  }\n}\nexport default Cast;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport movieApi from '../../servises/movies-api';\nimport styles from './Reviews.module.css';\n\nclass Reviews extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string.isRequired,\n      }),\n      path: T.string.isRequired,\n      url: T.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const movieID = match.params.movieId;\n    this.getCredits(movieID);\n  }\n\n  getCredits = id => {\n    movieApi.fetchReviews(id).then(reviews => {\n      this.setState({\n        reviews,\n      });\n    });\n  };\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <section className={styles.reviews}>\n        {' '}\n        <h2>Reviews</h2>{' '}\n        {reviews && (\n          <ul className={styles.reviewsList}>\n            {' '}\n            {reviews.map(review => (\n              <li key={review.id}>\n                {' '}\n                <h3>Author: {review.author}</h3> <p>` {review.content}`</p>{' '}\n              </li>\n            ))}\n          </ul>\n        )}\n        {reviews.length === 0 && <p>We do not have reviews for this movie</p>}\n      </section>\n    );\n  }\n}\n\nexport default Reviews;\n","import React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport T from 'prop-types';\nimport Cast from '../../components/Cast';\nimport Reviews from '../../components/Reviews';\nimport movieAPI from '../../servises/movies-api';\nimport styles from './MovieDetailsPage.module.css';\n\nclass MovieDetailsPage extends Component {\n  static propTypes = {\n    history: T.shape({\n      goBack: T.func.isRequired,\n    }).isRequired,\n    match: T.shape({\n      params: T.shape({ movieId: T.string.isRequired }),\n      path: T.string.isRequired,\n      url: T.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    movie: null,\n  };\n\n  componentDidMount() {\n    this.fetchDetails();\n  }\n\n  fetchDetails = () => {\n    const movieID = this.props.match.params.movieId;\n    movieAPI\n      .fetchMovieDetails(movieID)\n      .then(movie => {\n        this.setState({\n          movie,\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  moveToPreviousPage = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { movie } = this.state;\n    const { match } = this.props;\n    return (\n      <div className={styles.movieDetails}>\n        <button\n          className={styles.back_button}\n          onClick={this.moveToPreviousPage}\n          type=\"button\"\n        >\n          GO BACK\n        </button>\n\n        <h2>Movie Details</h2>\n        {movie && (\n          <>\n            <section className={styles.details_info}>\n              <img\n                src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`}\n                width=\"320\"\n                alt=\"poster\"\n              />\n              <div className={styles.details_info__wrapper}>\n                <h3>\n                  {movie.title} ({movie.release_date.slice(0, 4)})\n                </h3>\n                <p> User score: {movie.vote_average * 10}%</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <p>{movie.genres.map(item => ` ${item.name} `)}</p>\n              </div>\n            </section>\n            <section className={styles.details_additional}>\n              <h3>Additional information</h3>\n              <ul className={styles.details_additional__list}>\n                <li>\n                  <Link to={`${match.url}/cast`}>\n                    <span>&#8680;</span> Cast\n                  </Link>\n                </li>\n                <li>\n                  <Link to={`${match.url}/reviews`}>\n                    <span>&#8680;</span> Reviews\n                  </Link>\n                </li>\n              </ul>\n              <Switch>\n                <Route path={`${match.path}/cast`} component={Cast} />\n                <Route path={`${match.path}/reviews`} component={Reviews} />\n              </Switch>\n            </section>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport styles from './SearchForm.module.css';\n\nclass SearchForm extends Component {\n  static propTypes = {\n    onSearch: T.func.isRequired,\n  };\n\n  state = {\n    imageKeyWord: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      imageKeyWord: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSearch(this.state.imageKeyWord);\n    this.setState({\n      imageKeyWord: '',\n    });\n  };\n\n  render() {\n    const { imageKeyWord } = this.state;\n    return (\n      <form className={styles.searchForm} onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search  movies...\"\n          onChange={this.handleChange}\n          value={imageKeyWord}\n        />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport T from 'prop-types';\nimport SearchForm from '../../components/SearchForm';\nimport moviesAPI from '../../servises/movies-api';\nimport styles from './MoviesPage.module.css';\n\nclass MoviesPage extends Component {\n  static propTypes = {\n    history: T.shape({\n      push: T.func.isRequired,\n    }).isRequired,\n    location: T.shape({\n      pathname: T.string.isRequired,\n      search: T.string.isRequired,\n      key: T.string.isRequired,\n    }).isRequired,\n    match: T.shape({\n      params: T.shape({ movieId: T.string }),\n      path: T.string.isRequired,\n      url: T.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const query = new URLSearchParams(location.search).get('query');\n    if (!query) return;\n    moviesAPI.fetchMovies(query).then(movies =>\n      this.setState({\n        movies,\n      }),\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    const prevQuery = new URLSearchParams(prevProps.location.search).get(\n      'query',\n    );\n\n    const nextQuery = new URLSearchParams(location.search).get('query');\n\n    if (prevQuery === nextQuery) return;\n\n    moviesAPI.fetchMovies(nextQuery).then(movies =>\n      this.setState({\n        movies,\n      }),\n    );\n  }\n\n  setSearchQuery = serchQuery => {\n    this.props.history.push({\n      ...this.props.location,\n      search: `query=${serchQuery}`,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { match } = this.props;\n    return (\n      <div className={styles.MoviesPage}>\n        <SearchForm onSearch={this.setSearchQuery} />\n        <ul className={styles.MoviesPage_list}>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${match.url}/${movie.id}`}>\n                <span>&#8680;</span>\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default MoviesPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Navigation from '../Navigation';\nimport HomePage from '../../Pages/HomePage';\nimport MovieDetailsPage from '../../Pages/MovieDetailsPage';\nimport routes from '../../routes';\nimport MoviesPage from '../../Pages/MoviesPage/MoviesPage';\nimport styles from './App.module.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Switch>\n        <Route exact path={routes.HOME_PAGE} component={HomePage} />\n        <Route\n          path={routes.MOVIES_DETAILES_PAGE}\n          component={MovieDetailsPage}\n        />\n        <Route path={routes.MOVIES_PAGE} component={MoviesPage} />\n        <Redirect to={routes.HOME_PAGE} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport styles from './components/App/App.module.css';\nimport './index.css';\n\nReactDOM.render(\n  <App className={styles.app} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}